# This is a basic workflow to help you get started with Actions

name: CI DEV

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the master branch
  pull_request:
    branches: [ dev ]
    types: [ closed ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  dev_deploy:
    if: github.event.pull_request.merged == true
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      - name: Checkout source code
        uses: actions/checkout@master

      - uses: actions/setup-node@v2
        with:
          node-version: '12.22.0'

      - name: Cache node modules  # node modules 캐싱
        uses: actions/cache@v1
        with:
          path: node_modules
          key: ${{ runner.OS }}-master-build-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.OS }}-build-
            ${{ runner.OS }}-

      - name: Install Dependencies
        if: steps.node-cache.outputs.cache-hit != 'true'
        run: yarn

      - name: Build
        run: yarn build:dev

      - name: Deploy
        env:
          BUCKET_NAME: dev.orderview.torder.co.kr
          SIGNATURE_VERSION: v4
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        run: yarn deploy:action:dev

      - name: Actions-Slack
        uses: 8398a7/action-slack@v3.14.0
        with:
          status: custom
          fields: repo,message,commit,author,action,eventName,ref,workflow,job,took
          custom_payload: |
            {
              "attachments": [
                {
                  "color": '${{ job.status }}' === 'success' ? '#52BF90' : '${{ job.status }}' === 'failure' ? '#FF240D' : '#FFC000',
                  "blocks": [
                    {
                      "type": "header",
                      "text": {
                        "type": "plain_text",
                        "text": ":t'order: 마스터1 DEV UPDATE 알림"
                      }
                    },
                    {
                      "type": "divider"
                    },
                    {
                      "type": "section",
                      "fields": [
                        {
                          "type": "mrkdwn",
                          "text": "*담당자*\n${{ github.event.pull_request.user.login }}"
                        }
                      ]
                    },
                    {
                      "type": "section",
                      "fields": [
                        {
                          "type": "mrkdwn",
                          "text": "*업데이트 내용*\n${{ github.event.pull_request.title }}"
                        }
                      ]
                    },
                    {
                      "type": "actions",
                      "elements": [
                        {
                          "type": "button",
                          "text": {
                            "type": "plain_text",
                            "text": "CI DEV",
                            "emoji": true
                          },
                          "url": "https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}"
                        },
                        {
                          "type": "button",
                          "text": {
                            "type": "plain_text",
                            "text": "PR 바로가기",
                            "emoji": true
                          },
                          "url": "${{ github.event.pull_request.html_url }}"
                        }
                      ]
                    }
                  ]
                }
              ]
            }
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }} # required
        if: always() # Pick up events even if the job fails or is canceled.
