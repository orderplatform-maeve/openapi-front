name: CICD production

on:
  workflow_dispatch:
    inputs:
      label:
        description: 'label to deploy'
        required: true
        default: 'TORDER'
        type: choice
        options:
          - ALL
          - TORDER
          - SAAS
          - GLOBAL
          - UPLUS
          - SINGAPORE
          - US1
          - SYDNEY
          - PARTNERS

jobs:
  setup:
    runs-on: ubuntu-latest
    steps:
      # 선택한 branch or tag 체크아웃
      - name: check out tag
        uses: actions/checkout@v4
        with:
          ref: ${{ github.ref }}

      # 노드 버전 세팅
      - name: setup node version
        uses: actions/setup-node@v4
        with:
          node-version: "20.x"

      # node_modules 설치
      - name: install dependencies
        run: yarn

      # node_modules 캐시 저장
      - name: save node_modules cache
        uses: actions/cache/save@v4
        with:
          path: node_modules
          key: node-modules-${{ github.sha }}-${{ github.workflow }}

  #---------------------------------- torder
  build_torder:
    if: ${{ github.event.inputs.label == 'TORDER' || github.event.inputs.label == 'ALL' }}
    needs: setup
    uses: ./.github/workflows/reusable_build.yml
    secrets:
      BUILD_COMMAND: origin:build:live
      LABEL: torder

  deploy_torder:
    needs: build_torder
    uses: ./.github/workflows/reusable_deploy.yml
    secrets:
      TOKEN: ${{ secrets.BOT_PAT }}
      LABEL: torder
      AWS_ROLE_ARN: ${{ secrets.FRONTEND_ROLE_488659748805 }}
      AWS_BUCKET_NAME: ${{ secrets.AWS_LIVE_BUCKET_NAME }}
      AWS_REGION: ${{ secrets.AWS_REGION }}
      AWS_DISTRIBUTION_ID: ${{ secrets.AWS_LIVE_DISTRIBUTION_ID }}

  #---------------------------------- uplus
  build_uplus:
    if: ${{ github.event.inputs.label == 'UPLUS' || github.event.inputs.label == 'ALL' || github.event.inputs.label == 'SAAS' }}
    needs: setup
    uses: ./.github/workflows/reusable_build.yml
    secrets:
      BUILD_COMMAND: uplus:build:live
      LABEL: uplus

  deploy_uplus:
    needs: build_uplus
    uses: ./.github/workflows/reusable_deploy.yml
    secrets:
      TOKEN: ${{ secrets.BOT_PAT }}
      LABEL: uplus
      AWS_ROLE_ARN: ${{ secrets.FRONTEND_ROLE_790631726648 }}
      AWS_BUCKET_NAME: admin.saas.uplusorder.com
      AWS_REGION: ${{ secrets.AWS_REGION }}
      AWS_DISTRIBUTION_ID: E2VNQLBDSXFDQ3

  #---------------------------------- singapore
  build_singapore:
    if: ${{ github.event.inputs.label == 'SINGAPORE' || github.event.inputs.label == 'ALL' || github.event.inputs.label == 'GLOBAL' }}
    needs: setup
    uses: ./.github/workflows/reusable_build.yml
    secrets:
      BUILD_COMMAND: sg:build:live
      LABEL: singapore

  deploy_singapore:
    needs: build_singapore
    uses: ./.github/workflows/reusable_deploy.yml
    secrets:
      TOKEN: ${{ secrets.BOT_PAT }}
      LABEL: singapore
      AWS_ROLE_ARN: ${{ secrets.FRONTEND_ROLE_488659748805 }}
      AWS_BUCKET_NAME: ${{ secrets.AWS_SG_BUCKET_NAME }}
      AWS_REGION: ${{ secrets.AWS_SG_REGION }}
      AWS_DISTRIBUTION_ID: ${{ secrets.AWS_SG_DISTRIBUTION_ID }}

  #---------------------------------- us1
  build_us1:
    if: ${{ github.event.inputs.label == 'US1' || github.event.inputs.label == 'ALL' || github.event.inputs.label == 'GLOBAL' }}
    needs: setup
    uses: ./.github/workflows/reusable_build.yml
    secrets:
      BUILD_COMMAND: us_east:build:live
      LABEL: us1

  deploy_us1:
    needs: build_us1
    uses: ./.github/workflows/reusable_deploy.yml
    secrets:
      TOKEN: ${{ secrets.BOT_PAT }}
      LABEL: us1
      AWS_ROLE_ARN: ${{ secrets.FRONTEND_ROLE_488659748805 }}
      AWS_BUCKET_NAME: ${{ secrets.AWS_LIVE_US1_BUCKET_NAME }}
      AWS_REGION: ${{ secrets.AWS_US_EAST_REGION }}
      AWS_DISTRIBUTION_ID: ${{ secrets.AWS_LIVE_US1_DISTRIBUTION_ID }}

  deploy_us_east:
    needs: build_us1
    uses: ./.github/workflows/reusable_deploy.yml
    secrets:
      TOKEN: ${{ secrets.BOT_PAT }}
      LABEL: us1
      AWS_ROLE_ARN: ${{ secrets.FRONTEND_ROLE_488659748805 }}
      AWS_BUCKET_NAME: ${{ secrets.AWS_US_EAST_BUCKET_NAME }}
      AWS_REGION: ${{ secrets.AWS_US_EAST_REGION }}
      AWS_DISTRIBUTION_ID: ${{ secrets.AWS_US_EAST_DISTRIBUTION_ID }}

  #---------------------------------- sydney
  build_sydney:
    if: ${{ github.event.inputs.label == 'SYDNEY' || github.event.inputs.label == 'ALL' || github.event.inputs.label == 'GLOBAL' }}
    needs: setup
    uses: ./.github/workflows/reusable_build.yml
    secrets:
      BUILD_COMMAND: sydney:build:live
      LABEL: sydney

  deploy_sydney:
    needs: build_sydney
    uses: ./.github/workflows/reusable_deploy.yml
    secrets:
      TOKEN: ${{ secrets.BOT_PAT }}
      LABEL: sydney
      AWS_ROLE_ARN: ${{ secrets.FRONTEND_ROLE_488659748805 }}
      AWS_BUCKET_NAME: ${{ secrets.AWS_SYDNEY_BUCKET_NAME }}
      AWS_REGION: ${{ secrets.AWS_SYDNEY_REGION }}
      AWS_DISTRIBUTION_ID: ${{ secrets.AWS_SYDNEY_DISTRIBUTION_ID }}

  #---------------------------------- partners
  build_partners:
    if: ${{ github.event.inputs.label == 'PARTNERS' || github.event.inputs.label == 'ALL' || github.event.inputs.label == 'GLOBAL' }}
    needs: setup
    uses: ./.github/workflows/reusable_build.yml
    secrets:
      BUILD_COMMAND: partners:build:live
      LABEL: partners

  deploy_partners:
    needs: build_partners
    uses: ./.github/workflows/reusable_deploy.yml
    secrets:
      TOKEN: ${{ secrets.BOT_PAT }}
      LABEL: partners
      AWS_ROLE_ARN: ${{ secrets.FRONTEND_ROLE_488659748805 }}
      AWS_BUCKET_NAME: ${{ secrets.AWS_LIVE_US1_PARTNERS_BUCKET_NAME }}
      AWS_REGION: ${{ secrets.AWS_US_EAST_REGION }}
      AWS_DISTRIBUTION_ID: ${{ secrets.AWS_LIVE_US1_PARTNERS_DISTRIBUTION_ID }}

  # slack 알림
  slack_notification:
    runs-on: ubuntu-latest
    needs: [deploy_torder, deploy_uplus, deploy_singapore, deploy_us1, deploy_us_east, deploy_sydney, deploy_partners]
    if: ${{ always() }}
    steps:
      # job 성공 여부 체크
      - name: check workflow status
        id: workflow_status
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.BOT_PAT }}
          script: |
            const { data: jobs } = await github.rest.actions.listJobsForWorkflowRun({
              owner: context.repo.owner,
              repo: context.repo.repo,
              run_id: context.runId
            });

            let status = 'success';
            for (const job of jobs.jobs) {
              if (job.conclusion === 'failure' || job.conclusion === 'cancelled' || job.conclusion === 'neutral') {
                status = job.conclusion;
                break;
              }
            }

            core.setOutput('status', status);

      # slack 알림
      - name: slack notification
        uses: 8398a7/action-slack@v3
        with:
          status: custom
          fields: repo,message,commit,author,action,eventName,ref,workflow,job,took
          custom_payload: |
            {
              "attachments": [
                {
                  "color": '${{ steps.workflow_status.outputs.status }}' === 'success' ? '#52BF90' : '#FF240D',
                  "blocks": [
                    {
                      "type": "header",
                      "text": {
                        "type": "plain_text",
                        "text": ":t'order: 어드민 LIVE 배포"
                      }
                    },
                    {
                      "type": "divider"
                    },
                    {
                      "type": "section",
                      "fields": [
                        {
                          "type": "mrkdwn",
                          "text": "*라벨*\n${{ github.event.inputs.label }}"
                        }
                      ]
                    },
                    {
                      "type": "section",
                      "fields": [
                        {
                          "type": "mrkdwn",
                          "text": "*태그*\n${{ github.ref }}"
                        }
                      ]
                    },
                    {
                      "type": "section",
                      "fields": [
                        {
                          "type": "mrkdwn",
                          "text": "*상태*\n${{ steps.workflow_status.outputs.status }}"
                        }
                      ]
                    },
                    {
                      "type": "section",
                      "fields": [
                        {
                          "type": "mrkdwn",
                          "text": "*담당자*\n${{ github.event.sender.login }}"
                        }
                      ]
                    },
                  ]
                }
              ]
            }
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_DEPLOY_WEBHOOK_URL }}